# Form implementation generated from reading ui file 'novaui.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_novagui(object):
    def setupUi(self, novagui):
        novagui.setObjectName("novagui")
        novagui.resize(801, 531)
        self.centralwidget = QtWidgets.QWidget(parent=novagui)
        self.centralwidget.setObjectName("centralwidget")
        self.Start = QtWidgets.QPushButton(parent=self.centralwidget)
        self.Start.setGeometry(QtCore.QRect(290, 470, 231, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.Start.setFont(font)
        self.Start.setStyleSheet("QPushButton {\n"
"    background-image: url(C:/Users/Hafiz/Desktop/Nova GUI - Copy/Images/Start.png);\n"
"    background-repeat: no-repeat;\n"
"    background-position: center;\n"
"    background-size: cover; /* Or use \'contain\' if you want the entire image to fit */\n"
"    border: none;\n"
"    color: white;\n"
"    font-size: 24px;\n"
"    padding: 10px;\n"
"    transition: all 0.2s ease; /* Smooth transition for the effects */\n"
"    border-radius: 10px; /* Optional: rounded corners for a smoother look */\n"
"}\n"
"\n"
"/* Hover effect */\n"
"QPushButton:hover {\n"
"    box-shadow: 0 0 20px rgba(36, 236, 255, 0.8), 0 0 30px rgba(36, 235, 255, 0.6); /* More prominent glow effect */\n"
"    transform: scale(1.05); /* Slightly enlarge the button */\n"
"}\n"
"\n"
"/* Pressed effect */\n"
"QPushButton:pressed {\n"
"    background-color: rgba(0, 0, 0, 0.4); /* Darken the button to show it is pressed */\n"
"    padding-top: 12px; /* Adjust the padding to simulate a pushed button */\n"
"    padding-bottom: 8px; /* Adjust the padding to simulate a pushed button */\n"
"    transform: scale(1.95); /* Scale down the button to give a pushed effect */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"\n"
"/* Optional: active effect to provide a smooth push-down and release animation */\n"
"QPushButton:active {\n"
"    transform: scale(0.95); /* Scale down the button */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"")
        self.Start.setText("")
        self.Start.setObjectName("Start")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 30, 201, 91))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("Images/technology style border.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(70, 60, 131, 41))
        self.textBrowser.setStyleSheet("background:transparent;\n"
"border-radius: none;\n"
"font-family: \'Algerian\';\n"
"font-size: 21px;\n"
"color: rgb(221, 221, 221);")
        self.textBrowser.setObjectName("textBrowser")
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(240, 40, 351, 251))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("Images/Orb.gif"))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.textEdit = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(40, 320, 721, 91))
        self.textEdit.setStyleSheet("background:transparent;\n"
"border-radius: none;\n"
"color: rgb(221, 221, 221);")
        self.textEdit.setObjectName("textEdit")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(0, 0, 801, 531))
        self.label_6.setStyleSheet("background:black;")
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("Images/Main UI.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setObjectName("label_6")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(500, 40, 271, 251))
        self.label_8.setText("")
        self.label_8.setPixmap(QtGui.QPixmap("Images/2RNb.gif"))
        self.label_8.setScaledContents(True)
        self.label_8.setObjectName("label_8")
        self.Exit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.Exit.setGeometry(QtCore.QRect(550, 470, 231, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.Exit.setFont(font)
        self.Exit.setStyleSheet("QPushButton {\n"
"    background-image: url(C:/Users/Hafiz/Desktop/Nova GUI - Copy/Images/Exit.png);\n"
"    background-repeat: no-repeat;\n"
"    background-position: center;\n"
"    background-size: cover; /* Or use \'contain\' if you want the entire image to fit */\n"
"    border: none;\n"
"    color: white;\n"
"    font-size: 24px;\n"
"    padding: 10px;\n"
"    transition: all 0.2s ease; /* Smooth transition for the effects */\n"
"    border-radius: 10px; /* Optional: rounded corners for a smoother look */\n"
"}\n"
"\n"
"/* Hover effect */\n"
"QPushButton:hover {\n"
"    box-shadow: 0 0 20px rgba(36, 236, 255, 0.8), 0 0 30px rgba(36, 235, 255, 0.6); /* More prominent glow effect */\n"
"    transform: scale(1.05); /* Slightly enlarge the button */\n"
"}\n"
"\n"
"/* Pressed effect */\n"
"QPushButton:pressed {\n"
"    background-color: rgba(0, 0, 0, 0.4); /* Darken the button to show it is pressed */\n"
"    padding-top: 12px; /* Adjust the padding to simulate a pushed button */\n"
"    padding-bottom: 8px; /* Adjust the padding to simulate a pushed button */\n"
"    transform: scale(1.95); /* Scale down the button to give a pushed effect */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"\n"
"/* Optional: active effect to provide a smooth push-down and release animation */\n"
"QPushButton:active {\n"
"    transform: scale(0.95); /* Scale down the button */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"")
        self.Exit.setText("")
        self.Exit.setObjectName("Exit")
        self.textBrowser_2 = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(590, 150, 91, 41))
        self.textBrowser_2.setStyleSheet("background:transparent;\n"
"border-radius: none;\n"
"font-family: \'Algerian\';\n"
"font-size: 20px;\n"
"color: rgb(221, 221, 221);")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.ManageCommands = QtWidgets.QPushButton(parent=self.centralwidget)
        self.ManageCommands.setGeometry(QtCore.QRect(30, 470, 241, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.ManageCommands.setFont(font)
        self.ManageCommands.setStyleSheet("QPushButton {\n"
"    background-image: url(C:/Users/Hafiz/Desktop/Nova GUI - Copy/Images/Command B.png);\n"
"    background-repeat: no-repeat;\n"
"    background-position: center;\n"
"    background-size: cover; /* Or use \'contain\' if you want the entire image to fit */\n"
"    border: none;\n"
"    color: white;\n"
"    font-size: 24px;\n"
"    padding: 10px;\n"
"    transition: all 0.2s ease; /* Smooth transition for the effects */\n"
"    border-radius: 10px; /* Optional: rounded corners for a smoother look */\n"
"}\n"
"\n"
"/* Hover effect */\n"
"QPushButton:hover {\n"
"    box-shadow: 0 0 20px rgba(36, 236, 255, 0.8), 0 0 30px rgba(36, 235, 255, 0.6); /* More prominent glow effect */\n"
"    transform: scale(1.05); /* Slightly enlarge the button */\n"
"}\n"
"\n"
"/* Pressed effect */\n"
"QPushButton:pressed {\n"
"    background-color: rgba(0, 0, 0, 0.4); /* Darken the button to show it is pressed */\n"
"    padding-top: 12px; /* Adjust the padding to simulate a pushed button */\n"
"    padding-bottom: 8px; /* Adjust the padding to simulate a pushed button */\n"
"    transform: scale(1.95); /* Scale down the button to give a pushed effect */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"\n"
"/* Optional: active effect to provide a smooth push-down and release animation */\n"
"QPushButton:active {\n"
"    transform: scale(0.95); /* Scale down the button */\n"
"    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5); /* Inner shadow for pressed effect */\n"
"}\n"
"")
        self.ManageCommands.setText("")
        self.ManageCommands.setObjectName("ManageCommands")
        self.label_6.raise_()
        self.label_5.raise_()
        self.label_8.raise_()
        self.label.raise_()
        self.textBrowser.raise_()
        self.textBrowser_2.raise_()
        self.textEdit.raise_()
        self.Exit.raise_()
        self.ManageCommands.raise_()
        self.Start.raise_()
        novagui.setCentralWidget(self.centralwidget)

        self.retranslateUi(novagui)
        QtCore.QMetaObject.connectSlotsByName(novagui)

    def retranslateUi(self, novagui):
        _translate = QtCore.QCoreApplication.translate
        novagui.setWindowTitle(_translate("novagui", "MainWindow"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    novagui = QtWidgets.QMainWindow()
    ui = Ui_novagui()
    ui.setupUi(novagui)
    novagui.show()
    sys.exit(app.exec())
